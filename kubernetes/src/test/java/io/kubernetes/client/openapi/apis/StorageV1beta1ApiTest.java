/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.15.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubernetes.client.openapi.apis;

import io.kubernetes.client.openapi.ApiException;
import io.kubernetes.client.openapi.models.V1APIResourceList;
import io.kubernetes.client.openapi.models.V1DeleteOptions;
import io.kubernetes.client.openapi.models.V1Status;
import io.kubernetes.client.openapi.models.V1beta1CSIDriver;
import io.kubernetes.client.openapi.models.V1beta1CSIDriverList;
import io.kubernetes.client.openapi.models.V1beta1CSINode;
import io.kubernetes.client.openapi.models.V1beta1CSINodeList;
import io.kubernetes.client.openapi.models.V1beta1StorageClass;
import io.kubernetes.client.openapi.models.V1beta1StorageClassList;
import io.kubernetes.client.openapi.models.V1beta1VolumeAttachment;
import io.kubernetes.client.openapi.models.V1beta1VolumeAttachmentList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StorageV1beta1Api
 */
@Ignore
public class StorageV1beta1ApiTest {

    private final StorageV1beta1Api api = new StorageV1beta1Api();

    
    /**
     * 
     *
     * create a CSIDriver
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCSIDriverTest() throws ApiException {
        V1beta1CSIDriver body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        V1beta1CSIDriver response = api.createCSIDriver(body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a CSINode
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCSINodeTest() throws ApiException {
        V1beta1CSINode body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        V1beta1CSINode response = api.createCSINode(body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a StorageClass
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createStorageClassTest() throws ApiException {
        V1beta1StorageClass body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        V1beta1StorageClass response = api.createStorageClass(body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a VolumeAttachment
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createVolumeAttachmentTest() throws ApiException {
        V1beta1VolumeAttachment body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        V1beta1VolumeAttachment response = api.createVolumeAttachment(body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a CSIDriver
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCSIDriverTest() throws ApiException {
        String name = null;
        String pretty = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        V1DeleteOptions body = null;
        V1Status response = api.deleteCSIDriver(name, pretty, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a CSINode
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCSINodeTest() throws ApiException {
        String name = null;
        String pretty = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        V1DeleteOptions body = null;
        V1Status response = api.deleteCSINode(name, pretty, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of CSIDriver
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCollectionCSIDriverTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1DeleteOptions body = null;
        V1Status response = api.deleteCollectionCSIDriver(pretty, allowWatchBookmarks, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of CSINode
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCollectionCSINodeTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1DeleteOptions body = null;
        V1Status response = api.deleteCollectionCSINode(pretty, allowWatchBookmarks, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of StorageClass
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCollectionStorageClassTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1DeleteOptions body = null;
        V1Status response = api.deleteCollectionStorageClass(pretty, allowWatchBookmarks, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of VolumeAttachment
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCollectionVolumeAttachmentTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1DeleteOptions body = null;
        V1Status response = api.deleteCollectionVolumeAttachment(pretty, allowWatchBookmarks, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a StorageClass
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteStorageClassTest() throws ApiException {
        String name = null;
        String pretty = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        V1DeleteOptions body = null;
        V1Status response = api.deleteStorageClass(name, pretty, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a VolumeAttachment
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteVolumeAttachmentTest() throws ApiException {
        String name = null;
        String pretty = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        V1DeleteOptions body = null;
        V1Status response = api.deleteVolumeAttachment(name, pretty, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get available resources
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAPIResourcesTest() throws ApiException {
        V1APIResourceList response = api.getAPIResources();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind CSIDriver
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listCSIDriverTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1beta1CSIDriverList response = api.listCSIDriver(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind CSINode
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listCSINodeTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1beta1CSINodeList response = api.listCSINode(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind StorageClass
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listStorageClassTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1beta1StorageClassList response = api.listStorageClass(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind VolumeAttachment
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listVolumeAttachmentTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1beta1VolumeAttachmentList response = api.listVolumeAttachment(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified CSIDriver
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchCSIDriverTest() throws ApiException {
        String name = null;
        Object body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        V1beta1CSIDriver response = api.patchCSIDriver(name, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified CSINode
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchCSINodeTest() throws ApiException {
        String name = null;
        Object body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        V1beta1CSINode response = api.patchCSINode(name, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified StorageClass
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchStorageClassTest() throws ApiException {
        String name = null;
        Object body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        V1beta1StorageClass response = api.patchStorageClass(name, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified VolumeAttachment
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchVolumeAttachmentTest() throws ApiException {
        String name = null;
        Object body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        V1beta1VolumeAttachment response = api.patchVolumeAttachment(name, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified CSIDriver
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readCSIDriverTest() throws ApiException {
        String name = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        V1beta1CSIDriver response = api.readCSIDriver(name, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified CSINode
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readCSINodeTest() throws ApiException {
        String name = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        V1beta1CSINode response = api.readCSINode(name, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified StorageClass
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readStorageClassTest() throws ApiException {
        String name = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        V1beta1StorageClass response = api.readStorageClass(name, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified VolumeAttachment
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readVolumeAttachmentTest() throws ApiException {
        String name = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        V1beta1VolumeAttachment response = api.readVolumeAttachment(name, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified CSIDriver
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceCSIDriverTest() throws ApiException {
        String name = null;
        V1beta1CSIDriver body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        V1beta1CSIDriver response = api.replaceCSIDriver(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified CSINode
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceCSINodeTest() throws ApiException {
        String name = null;
        V1beta1CSINode body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        V1beta1CSINode response = api.replaceCSINode(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified StorageClass
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceStorageClassTest() throws ApiException {
        String name = null;
        V1beta1StorageClass body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        V1beta1StorageClass response = api.replaceStorageClass(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified VolumeAttachment
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceVolumeAttachmentTest() throws ApiException {
        String name = null;
        V1beta1VolumeAttachment body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        V1beta1VolumeAttachment response = api.replaceVolumeAttachment(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
}
