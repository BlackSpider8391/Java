/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.15.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubernetes.client.openapi.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubernetes.client.openapi.models.PolicyV1beta1AllowedCSIDriver;
import io.kubernetes.client.openapi.models.PolicyV1beta1AllowedFlexVolume;
import io.kubernetes.client.openapi.models.PolicyV1beta1AllowedHostPath;
import io.kubernetes.client.openapi.models.PolicyV1beta1FSGroupStrategyOptions;
import io.kubernetes.client.openapi.models.PolicyV1beta1HostPortRange;
import io.kubernetes.client.openapi.models.PolicyV1beta1RunAsGroupStrategyOptions;
import io.kubernetes.client.openapi.models.PolicyV1beta1RunAsUserStrategyOptions;
import io.kubernetes.client.openapi.models.PolicyV1beta1RuntimeClassStrategyOptions;
import io.kubernetes.client.openapi.models.PolicyV1beta1SELinuxStrategyOptions;
import io.kubernetes.client.openapi.models.PolicyV1beta1SupplementalGroupsStrategyOptions;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for PolicyV1beta1PodSecurityPolicySpec
 */
public class PolicyV1beta1PodSecurityPolicySpecTest {
    private final PolicyV1beta1PodSecurityPolicySpec model = new PolicyV1beta1PodSecurityPolicySpec();

    /**
     * Model tests for PolicyV1beta1PodSecurityPolicySpec
     */
    @Test
    public void testPolicyV1beta1PodSecurityPolicySpec() {
        // TODO: test PolicyV1beta1PodSecurityPolicySpec
    }

    /**
     * Test the property 'allowPrivilegeEscalation'
     */
    @Test
    public void allowPrivilegeEscalationTest() {
        // TODO: test allowPrivilegeEscalation
    }

    /**
     * Test the property 'allowedCSIDrivers'
     */
    @Test
    public void allowedCSIDriversTest() {
        // TODO: test allowedCSIDrivers
    }

    /**
     * Test the property 'allowedCapabilities'
     */
    @Test
    public void allowedCapabilitiesTest() {
        // TODO: test allowedCapabilities
    }

    /**
     * Test the property 'allowedFlexVolumes'
     */
    @Test
    public void allowedFlexVolumesTest() {
        // TODO: test allowedFlexVolumes
    }

    /**
     * Test the property 'allowedHostPaths'
     */
    @Test
    public void allowedHostPathsTest() {
        // TODO: test allowedHostPaths
    }

    /**
     * Test the property 'allowedProcMountTypes'
     */
    @Test
    public void allowedProcMountTypesTest() {
        // TODO: test allowedProcMountTypes
    }

    /**
     * Test the property 'allowedUnsafeSysctls'
     */
    @Test
    public void allowedUnsafeSysctlsTest() {
        // TODO: test allowedUnsafeSysctls
    }

    /**
     * Test the property 'defaultAddCapabilities'
     */
    @Test
    public void defaultAddCapabilitiesTest() {
        // TODO: test defaultAddCapabilities
    }

    /**
     * Test the property 'defaultAllowPrivilegeEscalation'
     */
    @Test
    public void defaultAllowPrivilegeEscalationTest() {
        // TODO: test defaultAllowPrivilegeEscalation
    }

    /**
     * Test the property 'forbiddenSysctls'
     */
    @Test
    public void forbiddenSysctlsTest() {
        // TODO: test forbiddenSysctls
    }

    /**
     * Test the property 'fsGroup'
     */
    @Test
    public void fsGroupTest() {
        // TODO: test fsGroup
    }

    /**
     * Test the property 'hostIPC'
     */
    @Test
    public void hostIPCTest() {
        // TODO: test hostIPC
    }

    /**
     * Test the property 'hostNetwork'
     */
    @Test
    public void hostNetworkTest() {
        // TODO: test hostNetwork
    }

    /**
     * Test the property 'hostPID'
     */
    @Test
    public void hostPIDTest() {
        // TODO: test hostPID
    }

    /**
     * Test the property 'hostPorts'
     */
    @Test
    public void hostPortsTest() {
        // TODO: test hostPorts
    }

    /**
     * Test the property 'privileged'
     */
    @Test
    public void privilegedTest() {
        // TODO: test privileged
    }

    /**
     * Test the property 'readOnlyRootFilesystem'
     */
    @Test
    public void readOnlyRootFilesystemTest() {
        // TODO: test readOnlyRootFilesystem
    }

    /**
     * Test the property 'requiredDropCapabilities'
     */
    @Test
    public void requiredDropCapabilitiesTest() {
        // TODO: test requiredDropCapabilities
    }

    /**
     * Test the property 'runAsGroup'
     */
    @Test
    public void runAsGroupTest() {
        // TODO: test runAsGroup
    }

    /**
     * Test the property 'runAsUser'
     */
    @Test
    public void runAsUserTest() {
        // TODO: test runAsUser
    }

    /**
     * Test the property 'runtimeClass'
     */
    @Test
    public void runtimeClassTest() {
        // TODO: test runtimeClass
    }

    /**
     * Test the property 'seLinux'
     */
    @Test
    public void seLinuxTest() {
        // TODO: test seLinux
    }

    /**
     * Test the property 'supplementalGroups'
     */
    @Test
    public void supplementalGroupsTest() {
        // TODO: test supplementalGroups
    }

    /**
     * Test the property 'volumes'
     */
    @Test
    public void volumesTest() {
        // TODO: test volumes
    }

}
